{"version":3,"sources":["apis/EventFinder.js","context/EventsContext.js","components/AddEvent.jsx","components/StarRating.jsx","components/EventList.jsx","components/Header.jsx","routes/Home.jsx","components/UpdateEvent.jsx","routes/UpdatePage.jsx","components/AddReview.jsx","components/Reviews.jsx","routes/EventDetailPage.jsx","App.jsx","index.js"],"names":["axios","create","baseURL","EventsContext","createContext","EventsContextProvider","props","useState","events","setEvents","selectedEvent","setSelectedEvent","Provider","value","addEvents","event","children","AddEvent","useContext","name","setName","location","setLocation","priceRange","setPriceRange","handleSubmit","e","a","preventDefault","EventFinder","post","price_range","response","data","console","log","className","action","onChange","target","type","placeholder","disabled","onClick","StarRating","rating","stars","i","push","Math","ceil","Number","isInteger","EventList","navigate","useNavigate","useEffect","get","fetchData","handleDelete","id","stopPropagation","delete","filter","renderRating","count","scope","map","repeat","handleUpdate","Header","Home","UpdateEvent","useParams","put","htmlFor","UpdatePage","AddReview","useLocation","reviewText","setReviewText","setRating","handleSubmitReview","review","pathname","Reviews","reviews","style","maxWidth","marginRight","EventDetailPage","average_rating","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.faee178f.chunk.js","sourcesContent":["import axios from \"axios\";\n// Set up data fetching API\nexport default axios.create({\n    baseURL: \"http://localhost:3006/api/v1/events\"\n});\n","// Set up context API \nimport React, {useState, createContext} from \"react\";\n\nexport const EventsContext = createContext();\n//UseState to store the list of Events in backends \nexport const EventsContextProvider = props => {\n    const [events, setEvents] = useState([]);\n\n// Render the selected event the user has clicked on\n    const [selectedEvent, setSelectedEvent] = useState(null);\n\n//Render UI for adding new events\n    const addEvents = (event) => {\n        setEvents([...events, event]);\n    };\n    return (\n        <EventsContext.Provider value={{events, \n            setEvents, \n            addEvents, \n            selectedEvent, \n            setSelectedEvent\n        }}>\n            {props.children}\n        </EventsContext.Provider>\n    )\n}","import React, { useState, useContext } from 'react'\nimport EventFinder from '../apis/EventFinder';\nimport { EventsContext } from '../context/EventsContext';\n// Create Searchbars\nconst AddEvent = () => {\n    //import the addEvent function from EventContext \n        const {addEvents} = useContext(EventsContext);\n    // Add control input for searchbars \n       const [name, setName] = useState(\"\")\n       const [location, setLocation] = useState(\"\")\n       const [priceRange, setPriceRange] = useState(\"Price Range\");\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        try {\n             const response = await EventFinder.post(\"/\", {\n                name, \n                location,\n                price_range: priceRange,\n            });\n            addEvents(response.data.data.event);\n            console.log(response);\n        } catch (err) {\n\n        }\n    }\n    return (\n        <div className= \"mb-4\">\n            <form action= \"\">\n                <div className= \"form-row\">\n                     <div className= \"col\">\n                        <input value = {name} onChange={e => setName(e.target.value)} type= \"text\" className=\"form-control\" placeholder=\"Name\" />\n                     </div>\n                     <div className=\"col\">\n                         <input value = {location} onChange={e => setLocation(e.target.value)}className= \"form-control\" type= \"text\" placeholder=\"Location\" />\n                     </div>\n                     <div className=\"col\">\n                        <select \n                        value = {priceRange} \n                        onChange={e => setPriceRange(e.target.value)}\n                        className= \"custom-select my-1 mr-sm-2\">\n                            <option disabled>Price Range</option>\n                            <option value=\"1\">$</option>\n                            <option value=\"2\">$$</option>\n                            <option value=\"3\">$$$</option>\n                            <option value=\"4\">$$$$</option>\n                            <option value=\"5\">$$$$$</option>\n                        </select>\n                     </div>\n                     <button onClick={handleSubmit} type= \"submit\" className=\"btn btn-primary\">Add</button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default AddEvent;\n","import React from 'react'\n// components that will hold individual star_rating\nconst StarRating = ({rating}) => {\n    const stars = [];\n   // for loop to iterate over stars from 1 to 5 \n   for (let i = 1; i <= 5; i++){\n       if (i <= rating) {\n           stars.push(<i key ={i} className = \"fas fa-star\"></i>); \n    //if rating is at decimal, it will raise to the highest whole value while checking the if its decimal\n       } else if (i === Math.ceil(rating) && !Number.isInteger(rating)) {\n            stars.push(<i key ={i} className=\"fas fa-star-half-alt\"></i>)\n       }else {\n           stars.push(<i key ={i} className= \"far fa-star\"></i>)\n       } \n   }\n    return (\n       <>\n        {stars}\n       </>\n    )\n};\n\nexport default StarRating;\n","import React, {useEffect, useContext} from 'react';\nimport EventFinder from '../apis/EventFinder';\nimport { EventsContext } from '../context/EventsContext';\nimport { useNavigate } from 'react-router-dom'; \nimport StarRating from './StarRating';\n\nconst EventList = (props) => {\n  const {events, setEvents} = useContext(EventsContext)\n//  Add updatepage redirect from update button via useNavigate \n  let navigate = useNavigate()\n// Fetch data as soon as user components is on UI screen\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await EventFinder.get(\"/\");\n                setEvents(response.data.data.events);\n            } catch(err) {\n                console.log(err)\n            }  \n        }   \n        \n        fetchData();\n    }, []);\n//Add function to delete an event via api\n     const handleDelete = async (e, id) => {\n         e.stopPropagation();\n        try{\n          const response = await EventFinder.delete(`/${id}`);\n          setEvents(events.filter(event => {\n              return event.id !== id\n          }));\n        } catch(err) {\n            console.log(err);\n        }\n     };\n\n     //update function to redirect to updatePage\n     const handleUpdate = (e, id) => {\n        e.stopPropagation();\n         navigate(`/events/${id}/update`);\n     };\n\n     const handleEventSelect = (id) => {\n         navigate(`/events/${id}`)\n     }\n     //Render out the Avr star rating of a selected event \n     const renderRating = (event) => {\n         if(!event.count) {\n             return <span className=\"text-warning\">0 reviews</span>\n         }\n         return(\n         <>\n         <StarRating rating={event.id} />\n         <span className=\"text-warning ml-1\">{event.count}</span>\n         </>\n         );\n     };\n\n    return (\n        <div className=\"list-group\">\n            <table className=\"table table-hover table-dark\">\n                <thead>\n                    <tr className=\"bg-primary\">\n                        <th scope=\"col\">Events</th>\n                        <th scope=\"col\">Location</th>\n                        <th scope=\"col\">Price Range</th>\n                        <th scope=\"col\">Ratings</th>\n                        <th scope=\"col\">Edit</th>\n                        <th scope=\"col\">Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {events && events.map(event =>{\n                        return (\n                            <tr onClick={() => handleEventSelect(event.id)} key= {event.id}>\n                            <td className=\"text-capitalize\">{event.name}</td>\n                            <td className=\"text-capitalize\">{event.location}</td>\n                            <td>{\"$\".repeat(event.price_range)}</td>\n                            <td>{renderRating(event)}</td>\n                            <td>\n                                 <button onClick={(e)=> handleUpdate(e, event.id)} className=\"btn btn-warning\">Update</button>\n                            </td>\n                            <td>\n                                 <button onClick ={(e) => handleDelete(e, event.id)} className=\"btn btn-danger\">Delete</button>\n                            </td>\n                        </tr>\n                        );                \n                    })};\n\n                    {/* <tr>\n                        <td>SouthBank Walk</td>\n                        <td>SouthBank </td>\n                        <td> $$ </td>\n                        <td>Rating</td>\n                        <td><button className=\"btn btn-warning\">Update</button></td>\n                        <td><button className=\"btn btn-danger\">Delete</button></td>\n                    </tr>\n\n                    <tr>\n                        <td>SouthBank Walk</td>\n                        <td>SouthBank </td>\n                        <td> $$ </td>\n                        <td>Rating</td>\n                        <td><button className=\"btn btn-warning\">Update</button></td>\n                        <td><button className=\"btn btn-danger\">Delete</button></td>\n                    </tr> */}\n                </tbody>\n             </table>\n        </div>\n    );\n};\n\nexport default EventList; \n","import React from 'react';\n    //Create Top header \nconst Header = () => {\n    return (\n        <div>\n            <h1 className=\"font-weight-light display-1 text-center\"> \n                Squid Note \n            </h1>\n        </div>\n    );\n};\n\nexport default Header;\n","import React from 'react'\nimport AddEvent from '../components/AddEvent';\nimport EventList from '../components/EventList';\nimport Header from '../components/Header';\n\n//Connect Header to Home Component\nconst Home = () => {\n    return (\n        <div>\n            <Header/>\n            <AddEvent/>\n            <EventList/>\n        </div>\n    );\n};\n\nexport default Home;\n","import React, { useContext, useEffect, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router';\nimport EventFinder from '../apis/EventFinder';\nimport { EventsContext } from '../context/EventsContext';\n\nconst UpdateEvent = (props) => {\n    const {id} = useParams();\n    // navigate user back to homepage after updating event info\n    let navigate = useNavigate();\n    const { event } = useContext(EventsContext);\n    const [name, setName] = useState(\"\");\n    const [location, setLocation] = useState(\"\");\n    const [priceRange, setPriceRange] = useState(\"\");\n\n    useEffect(() => {\n        const fetchData = async() => {\n            const response = await EventFinder.get(`/${id}`)\n            console.log(response.data.data) \n            setName(response.data.data.event.name)\n            setLocation(response.data.data.event.location)\n            setPriceRange(response.data.data.event.price_range)\n        };\n\n        fetchData()\n    }, []);\n\n    //handle submit function to update event via api\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        const updateEvent = await EventFinder.put(`/${id}`, {\n            name,\n            location,\n            price_range: priceRange,\n        });\n        navigate(\"/\");\n    };\n\n    return (\n        <div>\n            <form action=\"\">\n              <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <input value = {name} onChange={e => setName(e.target.value)} id=\"name\" className=\"form-control\" type=\"text\"/>\n              </div>\n\n              <div className=\"form-group\">\n                  <label htmlFor=\"name\">Location</label>\n                  <input value = {location} onChange={e => setLocation(e.target.value)} id=\"location\" className=\"form-control\" type=\"text\"/>\n              </div>\n              \n              <label htmlFor=\"price_range\">Price range</label>\n              <div className=\"col\">\n                        <select value = {priceRange} \n                        onChange={e => setPriceRange(e.target.value)} \n                        className= \"custom-select my-1 mr-sm-2\">\n                            <option disabled>Price Range</option>\n                            <option value=\"1\">$</option>\n                            <option value=\"2\">$$</option>\n                            <option value=\"3\">$$$</option>\n                            <option value=\"4\">$$$$</option>\n                            <option value=\"5\">$$$$$</option>\n                        </select>\n                     </div>\n                     <button type = \"submit\" onClick={handleSubmit} className=\"btn btn-primary\">Submit</button>\n            </form>\n        </div>\n    );\n};\n\nexport default UpdateEvent;\n","import React from 'react';\nimport UpdateEvent from '../components/UpdateEvent';\n\nconst UpdatePage = () => {\n    return (\n        <div>\n            <h1 className =\"text-center\"> Update Event</h1>\n            <UpdateEvent/>\n        </div>\n    );\n};\n\nexport default UpdatePage;\n","import React, { useState } from 'react';\nimport { useLocation, useParams, useNavigate } from 'react-router-dom';\nimport EventFinder from '../apis/EventFinder';\n\n// Create a user input for reviews of the selected event\nconst AddReview = () => {\n    const { id } = useParams(); \n    const location = useLocation()\n    const navigate = useNavigate()\n    const [name, setName] = useState(\"\")\n    const [reviewText, setReviewText] = useState(\"\")\n    const [rating, setRating] = useState(\"Rating\")\n\n    const handleSubmitReview = async (e) => {\n        e.preventDefault()\n        try {\n            const response = await EventFinder.post(`/${id}/addReview`, {\n                name,\n                review: reviewText,\n                rating,\n            });\n            navigate(\"/\");\n            navigate(location.pathname);\n        } catch (err) {\n            console.log(err)\n        }\n    };\n    return (\n        <div className=\"mb-2\">\n            <form action = \"\">\n                <div className=\"form-row\">\n                    <div className=\"form-group col-8\">\n                        <label htmlFor=\"name\">Name</label>\n                        <input value ={name} onChange={e => setName(e.target.value)} id=\"name\" placeholder=\"name\" type=\"text\" className=\"form-control\" />\n                    </div>\n                    <div className=\"form-group col-4\">\n                        <label htmlFor=\"rating\">Rating</label>\n                        <select value ={rating} onChange={e => setRating(e.target.value)} id=\"rating\" className=\"custom-select\">\n                            <option disabled>Rating</option>\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"4\">4</option>\n                            <option value=\"5\">5</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"Review\">Review</label>\n                    <textarea value ={reviewText} onChange={e => setReviewText(e.target.value)}id=\"Review\" className=\"form-control\"></textarea>\n                </div>\n                <button type= \"submit\" onClick={handleSubmitReview} className=\"btn btn-primary\">Submit </button>\n            </form>\n        </div>\n    );\n};\n\nexport default AddReview;\n","import React from 'react';\nimport StarRating from './StarRating';\n\nconst Reviews = ({reviews}) => {\n    return (\n        <div className=\"row row-cols-3 mb-2\">\n            {reviews.map((review) => {\n                return (\n                <div key={review.id} className=\"card text-white bg-primary mb-3 mr-4\" style={{maxWidth: \"30%\", marginRight: \"6px\"}}>\n                     <div className=\"card-header d-flex justify-content-between\">\n                        <span>{review.name}</span>\n                    <span><StarRating rating={review.rating}/></span>   \n                     </div>\n                     <div className=\"card-body\">\n                         <p className=\"card-text\">{review.review}</p>\n                     </div>\n                </div>  \n                );\n            })}\n          {/* <div className=\"card text-white bg-primary mb-3 mr-4\" style={{maxWidth: \"30%\", marginRight: \"6px\"}}>\n              <div className=\"card-header d-flex justify-content-between\">\n              <span>Jobe</span>\n              <span><StarRating rating={3}/></span>   \n              </div>\n              <div className=\"card-body\">\n                  <p className=\"card-text\">This event is a whole vibe</p>\n              </div>\n          </div>  \n           \n          <div className=\"card text-white bg-primary mb-3 mr-4\" style={{maxwidth: '30%', marginRight: \"6px\"}}>\n              <div className=\"card-header d-flex justify-content-between\">\n              <span>Jobe</span>\n              <span><StarRating rating={3}/></span>   \n              </div>\n              <div className=\"card-body\">\n                  <p className=\"card-text\">This event is a whole vibe</p>\n              </div>\n          </div> \n        \n           <div className=\"card text-white bg-primary mb-3 mr-4\" style={{maxwidth: '30%', marginRight: \"6px\"}}>\n              <div className=\"card-header d-flex justify-content-between\">\n              <span>Jobe</span>\n              <span><StarRating rating={3}/></span>   \n              </div>\n              <div className=\"card-body\">\n                  <p className=\"card-text\">This event is a whole vibe</p>\n              </div>\n          </div>  */}\n        </div>    \n    );\n};\n\nexport default Reviews;\n","import React, { useContext, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport EventFinder from '../apis/EventFinder';\nimport AddReview from '../components/AddReview';\nimport Reviews from '../components/Reviews';\nimport StarRating from '../components/StarRating';\nimport { EventsContext } from '../context/EventsContext';\n\nconst EventDetailPage = () => {\n    const {id} = useParams();\n    const {selectedEvent, setSelectedEvent} = useContext(EventsContext)\n\n    //fetch a particular event name and render it on eventDetailPage via api\n    useEffect(() => {\n        const fetchData = async () => {\n\n            try {\n            const response = await EventFinder.get(`/${id}`);\n\n            setSelectedEvent(response.data.data);\n            } catch (err) {\n                console.log(err)\n            }\n        };\n\n        fetchData()\n    }, []);\n\n    //only render event name when event name is selected\n    return (\n        <div>\n            {selectedEvent && (\n                <>\n                <h1 className =\"text-center display-1 text-capitalize\">{selectedEvent.event.name}</h1>\n                {/* Reviews has access to events and reviews */}\n                <div className=\"text-center\">\n                {/* Render out the avr star rating in selected event via review counts in db */}\n                    <StarRating rating={selectedEvent.event.average_rating} />\n                    <span className=\"text-warning ml-1\">\n                        {selectedEvent.event.count ? `(${selectedEvent.event.count})` : \"(0)\"}\n                    </span>\n                </div>\n                <div className=\"mt-3\">\n                    <Reviews reviews={selectedEvent.reviews}/>\n                </div>\n                <AddReview/>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default EventDetailPage;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Home from './routes/Home';\nimport UpdatePage from './routes/UpdatePage';\nimport EventDetailPage from './routes/EventDetailPage'; \nimport { EventsContextProvider } from './context/EventsContext';\n\nconst App = () =>{ \n  return ( <EventsContextProvider>\n    <Router>\n      <div className=\"container\">\n        <Routes>\n          <Route path = \"/\" element ={<Home/>}/>\n          <Route path = \"/events/:id/update\" element ={<UpdatePage/>}/>\n          <Route path = \"/events/:id\" element ={<EventDetailPage/>}/>\n        </Routes>\n        </div> \n    </Router>\n  </EventsContextProvider>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App/>, document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}