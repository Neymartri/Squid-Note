{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/EthanTran/Desktop/Squid-Note/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _slicedToArray from\"/Users/EthanTran/Desktop/Squid-Note/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/**\n * React Router DOM v6.2.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */import{useRef,useState,useLayoutEffect,createElement,forwardRef,useCallback,useMemo}from'react';import{createBrowserHistory,createHashHistory,createPath}from'history';import{Router,useHref,useLocation,useResolvedPath,useNavigate}from'react-router';export{MemoryRouter,Navigate,Outlet,Route,Router,Routes,UNSAFE_LocationContext,UNSAFE_NavigationContext,UNSAFE_RouteContext,createRoutesFromChildren,generatePath,matchPath,matchRoutes,renderMatches,resolvePath,useHref,useInRouterContext,useLocation,useMatch,useNavigate,useNavigationType,useOutlet,useOutletContext,useParams,useResolvedPath,useRoutes}from'react-router';function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}var _excluded=[\"onClick\",\"reloadDocument\",\"replace\",\"state\",\"target\",\"to\"],_excluded2=[\"aria-current\",\"caseSensitive\",\"className\",\"end\",\"style\",\"to\",\"children\"];function warning(cond,message){if(!cond){// eslint-disable-next-line no-console\nif(typeof console!==\"undefined\")console.warn(message);try{// Welcome to debugging React Router!\n//\n// This error is thrown as a convenience so you can more easily\n// find the source for a warning that appears in the console by\n// enabling \"pause on exceptions\" in your JavaScript debugger.\nthrow new Error(message);// eslint-disable-next-line no-empty\n}catch(e){}}}////////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n////////////////////////////////////////////////////////////////////////////////\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */function BrowserRouter(_ref){var basename=_ref.basename,children=_ref.children,window=_ref.window;var historyRef=useRef();if(historyRef.current==null){historyRef.current=createBrowserHistory({window:window});}var history=historyRef.current;var _useState=useState({action:history.action,location:history.location}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];useLayoutEffect(function(){return history.listen(setState);},[history]);return/*#__PURE__*/createElement(Router,{basename:basename,children:children,location:state.location,navigationType:state.action,navigator:history});}/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */function HashRouter(_ref2){var basename=_ref2.basename,children=_ref2.children,window=_ref2.window;var historyRef=useRef();if(historyRef.current==null){historyRef.current=createHashHistory({window:window});}var history=historyRef.current;var _useState3=useState({action:history.action,location:history.location}),_useState4=_slicedToArray(_useState3,2),state=_useState4[0],setState=_useState4[1];useLayoutEffect(function(){return history.listen(setState);},[history]);return/*#__PURE__*/createElement(Router,{basename:basename,children:children,location:state.location,navigationType:state.action,navigator:history});}/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */function HistoryRouter(_ref3){var basename=_ref3.basename,children=_ref3.children,history=_ref3.history;var _useState5=useState({action:history.action,location:history.location}),_useState6=_slicedToArray(_useState5,2),state=_useState6[0],setState=_useState6[1];useLayoutEffect(function(){return history.listen(setState);},[history]);return/*#__PURE__*/createElement(Router,{basename:basename,children:children,location:state.location,navigationType:state.action,navigator:history});}if(process.env.NODE_ENV!==\"production\"){HistoryRouter.displayName=\"unstable_HistoryRouter\";}function isModifiedEvent(event){return!!(event.metaKey||event.altKey||event.ctrlKey||event.shiftKey);}/**\n * The public API for rendering a history-aware <a>.\n */var Link=/*#__PURE__*/forwardRef(function LinkWithRef(_ref4,ref){var onClick=_ref4.onClick,reloadDocument=_ref4.reloadDocument,_ref4$replace=_ref4.replace,replace=_ref4$replace===void 0?false:_ref4$replace,state=_ref4.state,target=_ref4.target,to=_ref4.to,rest=_objectWithoutPropertiesLoose(_ref4,_excluded);var href=useHref(to);var internalOnClick=useLinkClickHandler(to,{replace:replace,state:state,target:target});function handleClick(event){if(onClick)onClick(event);if(!event.defaultPrevented&&!reloadDocument){internalOnClick(event);}}return/*#__PURE__*/ (// eslint-disable-next-line jsx-a11y/anchor-has-content\ncreateElement(\"a\",_extends({},rest,{href:href,onClick:handleClick,ref:ref,target:target})));});if(process.env.NODE_ENV!==\"production\"){Link.displayName=\"Link\";}/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */var NavLink=/*#__PURE__*/forwardRef(function NavLinkWithRef(_ref5,ref){var _ref5$ariaCurrent=_ref5[\"aria-current\"],ariaCurrentProp=_ref5$ariaCurrent===void 0?\"page\":_ref5$ariaCurrent,_ref5$caseSensitive=_ref5.caseSensitive,caseSensitive=_ref5$caseSensitive===void 0?false:_ref5$caseSensitive,_ref5$className=_ref5.className,classNameProp=_ref5$className===void 0?\"\":_ref5$className,_ref5$end=_ref5.end,end=_ref5$end===void 0?false:_ref5$end,styleProp=_ref5.style,to=_ref5.to,children=_ref5.children,rest=_objectWithoutPropertiesLoose(_ref5,_excluded2);var location=useLocation();var path=useResolvedPath(to);var locationPathname=location.pathname;var toPathname=path.pathname;if(!caseSensitive){locationPathname=locationPathname.toLowerCase();toPathname=toPathname.toLowerCase();}var isActive=locationPathname===toPathname||!end&&locationPathname.startsWith(toPathname)&&locationPathname.charAt(toPathname.length)===\"/\";var ariaCurrent=isActive?ariaCurrentProp:undefined;var className;if(typeof classNameProp===\"function\"){className=classNameProp({isActive:isActive});}else{// If the className prop is not a function, we use a default `active`\n// class for <NavLink />s that are active. In v5 `active` was the default\n// value for `activeClassName`, but we are removing that API and can still\n// use the old default behavior for a cleaner upgrade path and keep the\n// simple styling rules working as they currently do.\nclassName=[classNameProp,isActive?\"active\":null].filter(Boolean).join(\" \");}var style=typeof styleProp===\"function\"?styleProp({isActive:isActive}):styleProp;return/*#__PURE__*/createElement(Link,_extends({},rest,{\"aria-current\":ariaCurrent,className:className,ref:ref,style:style,to:to}),typeof children===\"function\"?children({isActive:isActive}):children);});if(process.env.NODE_ENV!==\"production\"){NavLink.displayName=\"NavLink\";}////////////////////////////////////////////////////////////////////////////////\n// HOOKS\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */function useLinkClickHandler(to,_temp){var _ref6=_temp===void 0?{}:_temp,target=_ref6.target,replaceProp=_ref6.replace,state=_ref6.state;var navigate=useNavigate();var location=useLocation();var path=useResolvedPath(to);return useCallback(function(event){if(event.button===0&&(// Ignore everything but left clicks\n!target||target===\"_self\")&&// Let browser handle \"target=_blank\" etc.\n!isModifiedEvent(event)// Ignore clicks with modifier keys\n){event.preventDefault();// If the URL hasn't changed, a regular <a> will do a replace instead of\n// a push, so do the same here.\nvar replace=!!replaceProp||createPath(location)===createPath(path);navigate(to,{replace:replace,state:state});}},[location,navigate,path,replaceProp,state,target,to]);}/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */function useSearchParams(defaultInit){process.env.NODE_ENV!==\"production\"?warning(typeof URLSearchParams!==\"undefined\",\"You cannot use the `useSearchParams` hook in a browser that does not \"+\"support the URLSearchParams API. If you need to support Internet \"+\"Explorer 11, we recommend you load a polyfill such as \"+\"https://github.com/ungap/url-search-params\\n\\n\"+\"If you're unsure how to load polyfills, we recommend you check out \"+\"https://polyfill.io/v3/ which provides some recommendations about how \"+\"to load polyfills only for users that need them, instead of for every \"+\"user.\"):void 0;var defaultSearchParamsRef=useRef(createSearchParams(defaultInit));var location=useLocation();var searchParams=useMemo(function(){var searchParams=createSearchParams(location.search);var _iterator=_createForOfIteratorHelper(defaultSearchParamsRef.current.keys()),_step;try{var _loop=function _loop(){var key=_step.value;if(!searchParams.has(key)){defaultSearchParamsRef.current.getAll(key).forEach(function(value){searchParams.append(key,value);});}};for(_iterator.s();!(_step=_iterator.n()).done;){_loop();}}catch(err){_iterator.e(err);}finally{_iterator.f();}return searchParams;},[location.search]);var navigate=useNavigate();var setSearchParams=useCallback(function(nextInit,navigateOptions){navigate(\"?\"+createSearchParams(nextInit),navigateOptions);},[navigate]);return[searchParams,setSearchParams];}/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */function createSearchParams(init){if(init===void 0){init=\"\";}return new URLSearchParams(typeof init===\"string\"||Array.isArray(init)||init instanceof URLSearchParams?init:Object.keys(init).reduce(function(memo,key){var value=init[key];return memo.concat(Array.isArray(value)?value.map(function(v){return[key,v];}):[[key,value]]);},[]));}export{BrowserRouter,HashRouter,Link,NavLink,createSearchParams,HistoryRouter as unstable_HistoryRouter,useLinkClickHandler,useSearchParams};","map":{"version":3,"sources":["../../../packages/react-router-dom/index.tsx"],"names":["console","window","historyRef","React","createBrowserHistory","history","action","location","state","createHashHistory","HistoryRouter","event","Link","replace","to","rest","href","useHref","internalOnClick","useLinkClickHandler","target","onClick","NavLink","ariaCurrentProp","caseSensitive","className","classNameProp","end","style","children","useLocation","path","useResolvedPath","locationPathname","toPathname","isActive","ariaCurrent","styleProp","navigate","useNavigate","isModifiedEvent","createPath","defaultSearchParamsRef","createSearchParams","searchParams","value","setSearchParams","init","Array","memo","v"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport type { BrowserHistory, HashHistory, History } from \"history\";\nimport { createBrowserHistory, createHashHistory, createPath } from \"history\";\nimport {\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createRoutesFromChildren,\n  generatePath,\n  matchRoutes,\n  matchPath,\n  resolvePath,\n  renderMatches,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useNavigationType,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useOutletContext\n} from \"react-router\";\nimport type { To } from \"react-router\";\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// RE-EXPORTS\n////////////////////////////////////////////////////////////////////////////////\n\n// Note: Keep in sync with react-router exports!\nexport {\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createRoutesFromChildren,\n  generatePath,\n  matchRoutes,\n  matchPath,\n  renderMatches,\n  resolvePath,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useNavigationType,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useOutletContext\n};\n\nexport type {\n  Location,\n  Path,\n  To,\n  NavigationType,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigator,\n  OutletProps,\n  Params,\n  PathMatch,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  RoutesProps\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext\n} from \"react-router\";\n\n////////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nfunction isModifiedEvent(event: React.MouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  to: To;\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    { onClick, reloadDocument, replace = false, state, target, to, ...rest },\n    ref\n  ) {\n    let href = useHref(to);\n    let internalOnClick = useLinkClickHandler(to, { replace, state, target });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented && !reloadDocument) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={href}\n        onClick={handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children:\n    | React.ReactNode\n    | ((props: { isActive: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: { isActive: boolean }) => string);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: { isActive: boolean }) => React.CSSProperties);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let location = useLocation();\n    let path = useResolvedPath(to);\n\n    let locationPathname = location.pathname;\n    let toPathname = path.pathname;\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [classNameProp, isActive ? \"active\" : null]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp({ isActive }) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\" ? children({ isActive }) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// HOOKS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to);\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (\n        event.button === 0 && // Ignore everything but left clicks\n        (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n        !isModifiedEvent(event) // Ignore clicks with modifier keys\n      ) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here.\n        let replace =\n          !!replaceProp || createPath(location) === createPath(path);\n\n        navigate(to, { replace, state });\n      }\n    },\n    [location, navigate, path, replaceProp, state, target, to]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(defaultInit?: URLSearchParamsInit) {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n\n  let location = useLocation();\n  let searchParams = React.useMemo(() => {\n    let searchParams = createSearchParams(location.search);\n\n    for (let key of defaultSearchParamsRef.current.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParamsRef.current.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n\n    return searchParams;\n  }, [location.search]);\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback(\n    (\n      nextInit: URLSearchParamsInit,\n      navigateOptions?: { replace?: boolean; state?: any }\n    ) => {\n      navigate(\"?\" + createSearchParams(nextInit), navigateOptions);\n    },\n    [navigate]\n  );\n\n  return [searchParams, setSearchParams] as const;\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n"]},"metadata":{},"sourceType":"module"}