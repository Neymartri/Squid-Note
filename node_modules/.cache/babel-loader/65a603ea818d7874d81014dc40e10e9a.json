{"ast":null,"code":"'use strict';var VERSION=require('../env/data').version;var validators={};// eslint-disable-next-line func-names\n['object','boolean','number','function','string','symbol'].forEach(function(type,i){validators[type]=function validator(thing){return typeof thing===type||'a'+(i<1?'n ':' ')+type;};});var deprecatedWarnings={};/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */validators.transitional=function transitional(validator,version,message){function formatMessage(opt,desc){return'[Axios v'+VERSION+'] Transitional option \\''+opt+'\\''+desc+(message?'. '+message:'');}// eslint-disable-next-line func-names\nreturn function(value,opt,opts){if(validator===false){throw new Error(formatMessage(opt,' has been removed'+(version?' in '+version:'')));}if(version&&!deprecatedWarnings[opt]){deprecatedWarnings[opt]=true;// eslint-disable-next-line no-console\nconsole.warn(formatMessage(opt,' has been deprecated since v'+version+' and will be removed in the near future'));}return validator?validator(value,opt,opts):true;};};/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */function assertOptions(options,schema,allowUnknown){if(typeof options!=='object'){throw new TypeError('options must be an object');}var keys=Object.keys(options);var i=keys.length;while(i-->0){var opt=keys[i];var validator=schema[opt];if(validator){var value=options[opt];var result=value===undefined||validator(value,opt,options);if(result!==true){throw new TypeError('option '+opt+' must be '+result);}continue;}if(allowUnknown!==true){throw Error('Unknown option '+opt);}}}module.exports={assertOptions:assertOptions,validators:validators};","map":{"version":3,"sources":["/Users/EthanTran/Desktop/Squid-Note/src/node_modules/axios/lib/helpers/validator.js"],"names":["VERSION","require","version","validators","forEach","type","i","validator","thing","deprecatedWarnings","transitional","message","formatMessage","opt","desc","value","opts","Error","console","warn","assertOptions","options","schema","allowUnknown","TypeError","keys","Object","length","result","undefined","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar VERSION = require('../env/data').version;\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')));\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n"]},"metadata":{},"sourceType":"module"}