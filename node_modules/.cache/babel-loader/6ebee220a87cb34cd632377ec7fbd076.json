{"ast":null,"code":"'use strict';var Cancel=require('./Cancel');/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */function CancelToken(executor){if(typeof executor!=='function'){throw new TypeError('executor must be a function.');}var resolvePromise;this.promise=new Promise(function promiseExecutor(resolve){resolvePromise=resolve;});var token=this;// eslint-disable-next-line func-names\nthis.promise.then(function(cancel){if(!token._listeners)return;var i;var l=token._listeners.length;for(i=0;i<l;i++){token._listeners[i](cancel);}token._listeners=null;});// eslint-disable-next-line func-names\nthis.promise.then=function(onfulfilled){var _resolve;// eslint-disable-next-line func-names\nvar promise=new Promise(function(resolve){token.subscribe(resolve);_resolve=resolve;}).then(onfulfilled);promise.cancel=function reject(){token.unsubscribe(_resolve);};return promise;};executor(function cancel(message){if(token.reason){// Cancellation has already been requested\nreturn;}token.reason=new Cancel(message);resolvePromise(token.reason);});}/**\n * Throws a `Cancel` if cancellation has been requested.\n */CancelToken.prototype.throwIfRequested=function throwIfRequested(){if(this.reason){throw this.reason;}};/**\n * Subscribe to the cancel signal\n */CancelToken.prototype.subscribe=function subscribe(listener){if(this.reason){listener(this.reason);return;}if(this._listeners){this._listeners.push(listener);}else{this._listeners=[listener];}};/**\n * Unsubscribe from the cancel signal\n */CancelToken.prototype.unsubscribe=function unsubscribe(listener){if(!this._listeners){return;}var index=this._listeners.indexOf(listener);if(index!==-1){this._listeners.splice(index,1);}};/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */CancelToken.source=function source(){var cancel;var token=new CancelToken(function executor(c){cancel=c;});return{token:token,cancel:cancel};};module.exports=CancelToken;","map":{"version":3,"sources":["/Users/EthanTran/Desktop/Squid-Note/src/node_modules/axios/lib/cancel/CancelToken.js"],"names":["Cancel","require","CancelToken","executor","TypeError","resolvePromise","promise","Promise","promiseExecutor","resolve","token","then","cancel","_listeners","i","l","length","onfulfilled","_resolve","subscribe","reject","unsubscribe","message","reason","prototype","throwIfRequested","listener","push","index","indexOf","splice","source","c","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n"]},"metadata":{},"sourceType":"module"}