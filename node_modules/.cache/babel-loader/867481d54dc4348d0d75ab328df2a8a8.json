{"ast":null,"code":"'use strict';var utils=require('./../utils');var buildURL=require('../helpers/buildURL');var InterceptorManager=require('./InterceptorManager');var dispatchRequest=require('./dispatchRequest');var mergeConfig=require('./mergeConfig');var validator=require('../helpers/validator');var validators=validator.validators;/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */function Axios(instanceConfig){this.defaults=instanceConfig;this.interceptors={request:new InterceptorManager(),response:new InterceptorManager()};}/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */Axios.prototype.request=function request(config){/*eslint no-param-reassign:0*/ // Allow for axios('example/url'[, config]) a la fetch API\nif(typeof config==='string'){config=arguments[1]||{};config.url=arguments[0];}else{config=config||{};}config=mergeConfig(this.defaults,config);// Set config.method\nif(config.method){config.method=config.method.toLowerCase();}else if(this.defaults.method){config.method=this.defaults.method.toLowerCase();}else{config.method='get';}var transitional=config.transitional;if(transitional!==undefined){validator.assertOptions(transitional,{silentJSONParsing:validators.transitional(validators.boolean),forcedJSONParsing:validators.transitional(validators.boolean),clarifyTimeoutError:validators.transitional(validators.boolean)},false);}// filter out skipped interceptors\nvar requestInterceptorChain=[];var synchronousRequestInterceptors=true;this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor){if(typeof interceptor.runWhen==='function'&&interceptor.runWhen(config)===false){return;}synchronousRequestInterceptors=synchronousRequestInterceptors&&interceptor.synchronous;requestInterceptorChain.unshift(interceptor.fulfilled,interceptor.rejected);});var responseInterceptorChain=[];this.interceptors.response.forEach(function pushResponseInterceptors(interceptor){responseInterceptorChain.push(interceptor.fulfilled,interceptor.rejected);});var promise;if(!synchronousRequestInterceptors){var chain=[dispatchRequest,undefined];Array.prototype.unshift.apply(chain,requestInterceptorChain);chain=chain.concat(responseInterceptorChain);promise=Promise.resolve(config);while(chain.length){promise=promise.then(chain.shift(),chain.shift());}return promise;}var newConfig=config;while(requestInterceptorChain.length){var onFulfilled=requestInterceptorChain.shift();var onRejected=requestInterceptorChain.shift();try{newConfig=onFulfilled(newConfig);}catch(error){onRejected(error);break;}}try{promise=dispatchRequest(newConfig);}catch(error){return Promise.reject(error);}while(responseInterceptorChain.length){promise=promise.then(responseInterceptorChain.shift(),responseInterceptorChain.shift());}return promise;};Axios.prototype.getUri=function getUri(config){config=mergeConfig(this.defaults,config);return buildURL(config.url,config.params,config.paramsSerializer).replace(/^\\?/,'');};// Provide aliases for supported request methods\nutils.forEach(['delete','get','head','options'],function forEachMethodNoData(method){/*eslint func-names:0*/Axios.prototype[method]=function(url,config){return this.request(mergeConfig(config||{},{method:method,url:url,data:(config||{}).data}));};});utils.forEach(['post','put','patch'],function forEachMethodWithData(method){/*eslint func-names:0*/Axios.prototype[method]=function(url,data,config){return this.request(mergeConfig(config||{},{method:method,url:url,data:data}));};});module.exports=Axios;","map":{"version":3,"sources":["/Users/EthanTran/Desktop/Squid-Note/src/node_modules/axios/lib/core/Axios.js"],"names":["utils","require","buildURL","InterceptorManager","dispatchRequest","mergeConfig","validator","validators","Axios","instanceConfig","defaults","interceptors","request","response","prototype","config","arguments","url","method","toLowerCase","transitional","undefined","assertOptions","silentJSONParsing","boolean","forcedJSONParsing","clarifyTimeoutError","requestInterceptorChain","synchronousRequestInterceptors","forEach","unshiftRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","pushResponseInterceptors","push","promise","chain","Array","apply","concat","Promise","resolve","length","then","shift","newConfig","onFulfilled","onRejected","error","reject","getUri","params","paramsSerializer","replace","forEachMethodNoData","data","forEachMethodWithData","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n"]},"metadata":{},"sourceType":"module"}