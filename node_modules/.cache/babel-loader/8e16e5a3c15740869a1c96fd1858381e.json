{"ast":null,"code":"import _regeneratorRuntime from\"/Users/EthanTran/Desktop/Squid-Note/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/EthanTran/Desktop/Squid-Note/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useContext,useEffect}from'react';import{useParams}from'react-router-dom';import EventFinder from'../apis/EventFinder';import AddReview from'../components/AddReview';import Reviews from'../components/Reviews';import StarRating from'../components/StarRating';import{EventsContext}from'../context/EventsContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var EventDetailPage=function EventDetailPage(){var _useParams=useParams(),id=_useParams.id;var _useContext=useContext(EventsContext),selectedEvent=_useContext.selectedEvent,setSelectedEvent=_useContext.setSelectedEvent;//fetch a particular event name and render it on eventDetailPage via api\nuseEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return EventFinder.get(\"/\".concat(id));case 3:response=_context.sent;setSelectedEvent(response.data.data);_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();},[]);//only render event name when event name is selected\nreturn/*#__PURE__*/_jsx(\"div\",{children:selectedEvent&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-center display-1 text-capitalize\",children:selectedEvent.event.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(StarRating,{rating:selectedEvent.event.average_rating}),/*#__PURE__*/_jsx(\"span\",{className:\"text-warning ml-1\",children:selectedEvent.event.count?\"(\".concat(selectedEvent.event.count,\")\"):\"(0)\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-3\",children:/*#__PURE__*/_jsx(Reviews,{reviews:selectedEvent.reviews})}),/*#__PURE__*/_jsx(AddReview,{})]})});};export default EventDetailPage;","map":{"version":3,"sources":["/Users/EthanTran/Desktop/Squid-Note/src/routes/EventDetailPage.jsx"],"names":["React","useContext","useEffect","useParams","EventFinder","AddReview","Reviews","StarRating","EventsContext","EventDetailPage","id","selectedEvent","setSelectedEvent","fetchData","get","response","data","console","log","event","name","average_rating","count","reviews"],"mappings":"iTAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,KAA6C,OAA7C,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,OAASC,aAAT,KAA8B,0BAA9B,C,6IAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,gBACbN,SAAS,EADI,CACnBO,EADmB,YACnBA,EADmB,iBAEgBT,UAAU,CAACO,aAAD,CAF1B,CAEnBG,aAFmB,aAEnBA,aAFmB,CAEJC,gBAFI,aAEJA,gBAFI,CAI1B;AACAV,SAAS,CAAC,UAAM,CACZ,GAAMW,CAAAA,SAAS,0FAAG,sLAGST,CAAAA,WAAW,CAACU,GAAZ,YAAoBJ,EAApB,EAHT,QAGRK,QAHQ,eAKdH,gBAAgB,CAACG,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAhB,CALc,+EAOVC,OAAO,CAACC,GAAR,cAPU,oEAAH,kBAATL,CAAAA,SAAS,0CAAf,CAWAA,SAAS,GACZ,CAbQ,CAaN,EAbM,CAAT,CAeA;AACA,mBACI,qBACKF,aAAa,eACV,wCACA,WAAI,SAAS,CAAE,uCAAf,UAAwDA,aAAa,CAACQ,KAAd,CAAoBC,IAA5E,EADA,cAGA,aAAK,SAAS,CAAC,aAAf,wBAEI,KAAC,UAAD,EAAY,MAAM,CAAET,aAAa,CAACQ,KAAd,CAAoBE,cAAxC,EAFJ,cAGI,aAAM,SAAS,CAAC,mBAAhB,UACKV,aAAa,CAACQ,KAAd,CAAoBG,KAApB,YAAgCX,aAAa,CAACQ,KAAd,CAAoBG,KAApD,MAA+D,KADpE,EAHJ,GAHA,cAUA,YAAK,SAAS,CAAC,MAAf,uBACI,KAAC,OAAD,EAAS,OAAO,CAAEX,aAAa,CAACY,OAAhC,EADJ,EAVA,cAaA,KAAC,SAAD,IAbA,GAFR,EADJ,CAqBH,CA1CD,CA4CA,cAAed,CAAAA,eAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport EventFinder from '../apis/EventFinder';\nimport AddReview from '../components/AddReview';\nimport Reviews from '../components/Reviews';\nimport StarRating from '../components/StarRating';\nimport { EventsContext } from '../context/EventsContext';\n\nconst EventDetailPage = () => {\n    const {id} = useParams();\n    const {selectedEvent, setSelectedEvent} = useContext(EventsContext)\n\n    //fetch a particular event name and render it on eventDetailPage via api\n    useEffect(() => {\n        const fetchData = async () => {\n\n            try {\n            const response = await EventFinder.get(`/${id}`);\n\n            setSelectedEvent(response.data.data);\n            } catch (err) {\n                console.log(err)\n            }\n        };\n\n        fetchData()\n    }, []);\n\n    //only render event name when event name is selected\n    return (\n        <div>\n            {selectedEvent && (\n                <>\n                <h1 className =\"text-center display-1 text-capitalize\">{selectedEvent.event.name}</h1>\n                {/* Reviews has access to events and reviews */}\n                <div className=\"text-center\">\n                {/* Render out the avr star rating in selected event via review counts in db */}\n                    <StarRating rating={selectedEvent.event.average_rating} />\n                    <span className=\"text-warning ml-1\">\n                        {selectedEvent.event.count ? `(${selectedEvent.event.count})` : \"(0)\"}\n                    </span>\n                </div>\n                <div className=\"mt-3\">\n                    <Reviews reviews={selectedEvent.reviews}/>\n                </div>\n                <AddReview/>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default EventDetailPage;\n"]},"metadata":{},"sourceType":"module"}