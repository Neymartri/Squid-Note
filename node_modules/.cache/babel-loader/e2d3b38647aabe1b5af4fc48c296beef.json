{"ast":null,"code":"'use strict';var utils=require('../utils');/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */module.exports=function mergeConfig(config1,config2){// eslint-disable-next-line no-param-reassign\nconfig2=config2||{};var config={};function getMergedValue(target,source){if(utils.isPlainObject(target)&&utils.isPlainObject(source)){return utils.merge(target,source);}else if(utils.isPlainObject(source)){return utils.merge({},source);}else if(utils.isArray(source)){return source.slice();}return source;}// eslint-disable-next-line consistent-return\nfunction mergeDeepProperties(prop){if(!utils.isUndefined(config2[prop])){return getMergedValue(config1[prop],config2[prop]);}else if(!utils.isUndefined(config1[prop])){return getMergedValue(undefined,config1[prop]);}}// eslint-disable-next-line consistent-return\nfunction valueFromConfig2(prop){if(!utils.isUndefined(config2[prop])){return getMergedValue(undefined,config2[prop]);}}// eslint-disable-next-line consistent-return\nfunction defaultToConfig2(prop){if(!utils.isUndefined(config2[prop])){return getMergedValue(undefined,config2[prop]);}else if(!utils.isUndefined(config1[prop])){return getMergedValue(undefined,config1[prop]);}}// eslint-disable-next-line consistent-return\nfunction mergeDirectKeys(prop){if(prop in config2){return getMergedValue(config1[prop],config2[prop]);}else if(prop in config1){return getMergedValue(undefined,config1[prop]);}}var mergeMap={'url':valueFromConfig2,'method':valueFromConfig2,'data':valueFromConfig2,'baseURL':defaultToConfig2,'transformRequest':defaultToConfig2,'transformResponse':defaultToConfig2,'paramsSerializer':defaultToConfig2,'timeout':defaultToConfig2,'timeoutMessage':defaultToConfig2,'withCredentials':defaultToConfig2,'adapter':defaultToConfig2,'responseType':defaultToConfig2,'xsrfCookieName':defaultToConfig2,'xsrfHeaderName':defaultToConfig2,'onUploadProgress':defaultToConfig2,'onDownloadProgress':defaultToConfig2,'decompress':defaultToConfig2,'maxContentLength':defaultToConfig2,'maxBodyLength':defaultToConfig2,'transport':defaultToConfig2,'httpAgent':defaultToConfig2,'httpsAgent':defaultToConfig2,'cancelToken':defaultToConfig2,'socketPath':defaultToConfig2,'responseEncoding':defaultToConfig2,'validateStatus':mergeDirectKeys};utils.forEach(Object.keys(config1).concat(Object.keys(config2)),function computeConfigValue(prop){var merge=mergeMap[prop]||mergeDeepProperties;var configValue=merge(prop);utils.isUndefined(configValue)&&merge!==mergeDirectKeys||(config[prop]=configValue);});return config;};","map":{"version":3,"sources":["/Users/EthanTran/Desktop/Squid-Note/src/node_modules/axios/lib/core/mergeConfig.js"],"names":["utils","require","module","exports","mergeConfig","config1","config2","config","getMergedValue","target","source","isPlainObject","merge","isArray","slice","mergeDeepProperties","prop","isUndefined","undefined","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","forEach","Object","keys","concat","computeConfigValue","configValue"],"mappings":"AAAA,aAEA,GAAIA,CAAAA,KAAK,CAAGC,OAAO,CAAC,UAAD,CAAnB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACAC,MAAM,CAACC,OAAP,CAAiB,QAASC,CAAAA,WAAT,CAAqBC,OAArB,CAA8BC,OAA9B,CAAuC,CACtD;AACAA,OAAO,CAAGA,OAAO,EAAI,EAArB,CACA,GAAIC,CAAAA,MAAM,CAAG,EAAb,CAEA,QAASC,CAAAA,cAAT,CAAwBC,MAAxB,CAAgCC,MAAhC,CAAwC,CACtC,GAAIV,KAAK,CAACW,aAAN,CAAoBF,MAApB,GAA+BT,KAAK,CAACW,aAAN,CAAoBD,MAApB,CAAnC,CAAgE,CAC9D,MAAOV,CAAAA,KAAK,CAACY,KAAN,CAAYH,MAAZ,CAAoBC,MAApB,CAAP,CACD,CAFD,IAEO,IAAIV,KAAK,CAACW,aAAN,CAAoBD,MAApB,CAAJ,CAAiC,CACtC,MAAOV,CAAAA,KAAK,CAACY,KAAN,CAAY,EAAZ,CAAgBF,MAAhB,CAAP,CACD,CAFM,IAEA,IAAIV,KAAK,CAACa,OAAN,CAAcH,MAAd,CAAJ,CAA2B,CAChC,MAAOA,CAAAA,MAAM,CAACI,KAAP,EAAP,CACD,CACD,MAAOJ,CAAAA,MAAP,CACD,CAED;AACA,QAASK,CAAAA,mBAAT,CAA6BC,IAA7B,CAAmC,CACjC,GAAI,CAAChB,KAAK,CAACiB,WAAN,CAAkBX,OAAO,CAACU,IAAD,CAAzB,CAAL,CAAuC,CACrC,MAAOR,CAAAA,cAAc,CAACH,OAAO,CAACW,IAAD,CAAR,CAAgBV,OAAO,CAACU,IAAD,CAAvB,CAArB,CACD,CAFD,IAEO,IAAI,CAAChB,KAAK,CAACiB,WAAN,CAAkBZ,OAAO,CAACW,IAAD,CAAzB,CAAL,CAAuC,CAC5C,MAAOR,CAAAA,cAAc,CAACU,SAAD,CAAYb,OAAO,CAACW,IAAD,CAAnB,CAArB,CACD,CACF,CAED;AACA,QAASG,CAAAA,gBAAT,CAA0BH,IAA1B,CAAgC,CAC9B,GAAI,CAAChB,KAAK,CAACiB,WAAN,CAAkBX,OAAO,CAACU,IAAD,CAAzB,CAAL,CAAuC,CACrC,MAAOR,CAAAA,cAAc,CAACU,SAAD,CAAYZ,OAAO,CAACU,IAAD,CAAnB,CAArB,CACD,CACF,CAED;AACA,QAASI,CAAAA,gBAAT,CAA0BJ,IAA1B,CAAgC,CAC9B,GAAI,CAAChB,KAAK,CAACiB,WAAN,CAAkBX,OAAO,CAACU,IAAD,CAAzB,CAAL,CAAuC,CACrC,MAAOR,CAAAA,cAAc,CAACU,SAAD,CAAYZ,OAAO,CAACU,IAAD,CAAnB,CAArB,CACD,CAFD,IAEO,IAAI,CAAChB,KAAK,CAACiB,WAAN,CAAkBZ,OAAO,CAACW,IAAD,CAAzB,CAAL,CAAuC,CAC5C,MAAOR,CAAAA,cAAc,CAACU,SAAD,CAAYb,OAAO,CAACW,IAAD,CAAnB,CAArB,CACD,CACF,CAED;AACA,QAASK,CAAAA,eAAT,CAAyBL,IAAzB,CAA+B,CAC7B,GAAIA,IAAI,GAAIV,CAAAA,OAAZ,CAAqB,CACnB,MAAOE,CAAAA,cAAc,CAACH,OAAO,CAACW,IAAD,CAAR,CAAgBV,OAAO,CAACU,IAAD,CAAvB,CAArB,CACD,CAFD,IAEO,IAAIA,IAAI,GAAIX,CAAAA,OAAZ,CAAqB,CAC1B,MAAOG,CAAAA,cAAc,CAACU,SAAD,CAAYb,OAAO,CAACW,IAAD,CAAnB,CAArB,CACD,CACF,CAED,GAAIM,CAAAA,QAAQ,CAAG,CACb,MAAOH,gBADM,CAEb,SAAUA,gBAFG,CAGb,OAAQA,gBAHK,CAIb,UAAWC,gBAJE,CAKb,mBAAoBA,gBALP,CAMb,oBAAqBA,gBANR,CAOb,mBAAoBA,gBAPP,CAQb,UAAWA,gBARE,CASb,iBAAkBA,gBATL,CAUb,kBAAmBA,gBAVN,CAWb,UAAWA,gBAXE,CAYb,eAAgBA,gBAZH,CAab,iBAAkBA,gBAbL,CAcb,iBAAkBA,gBAdL,CAeb,mBAAoBA,gBAfP,CAgBb,qBAAsBA,gBAhBT,CAiBb,aAAcA,gBAjBD,CAkBb,mBAAoBA,gBAlBP,CAmBb,gBAAiBA,gBAnBJ,CAoBb,YAAaA,gBApBA,CAqBb,YAAaA,gBArBA,CAsBb,aAAcA,gBAtBD,CAuBb,cAAeA,gBAvBF,CAwBb,aAAcA,gBAxBD,CAyBb,mBAAoBA,gBAzBP,CA0Bb,iBAAkBC,eA1BL,CAAf,CA6BArB,KAAK,CAACuB,OAAN,CAAcC,MAAM,CAACC,IAAP,CAAYpB,OAAZ,EAAqBqB,MAArB,CAA4BF,MAAM,CAACC,IAAP,CAAYnB,OAAZ,CAA5B,CAAd,CAAiE,QAASqB,CAAAA,kBAAT,CAA4BX,IAA5B,CAAkC,CACjG,GAAIJ,CAAAA,KAAK,CAAGU,QAAQ,CAACN,IAAD,CAAR,EAAkBD,mBAA9B,CACA,GAAIa,CAAAA,WAAW,CAAGhB,KAAK,CAACI,IAAD,CAAvB,CACChB,KAAK,CAACiB,WAAN,CAAkBW,WAAlB,GAAkChB,KAAK,GAAKS,eAA7C,GAAkEd,MAAM,CAACS,IAAD,CAAN,CAAeY,WAAjF,EACD,CAJD,EAMA,MAAOrB,CAAAA,MAAP,CACD,CAtFD","sourcesContent":["'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n"]},"metadata":{},"sourceType":"module"}